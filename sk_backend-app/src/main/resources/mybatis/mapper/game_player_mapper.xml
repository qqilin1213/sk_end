<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ink.squidkill.infrastructure.persistent.dao.IGamePlayerDao">

    <resultMap id="dataMap" type="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        <id column="id" property="id"/>
        <result column="room_id" property="roomId"/>
        <result column="player_id" property="playerId"/>
        <result column="role_name" property="roleName"/>
        <result column="is_alive" property="isAlive"/>
        <result column="is_host" property="isHost"/>
        <result column="is_voted" property="isVoted"/>
        <result column="is_ready" property="isReady"/>
        <result column="is_complete" property="isComplete"/>
        <result column="is_top" property="isTop"/>
        <result column="group_id" property="groupId"/>
        <result column="voted_player_id" property="votedPlayerId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_restart" property="isRestart"/>
        <result column="is_creator" property="isCreator"/>

    </resultMap>

    <insert id="insert" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        insert into game_player(
            room_id,player_id,is_alive,is_host,is_ready,is_restart,is_creator,create_time,update_time
        ) values (#{roomId}, #{playerId}, #{isAlive}, #{isHost}, #{isReady},#{isRestart},#{isCreator},now(),now())
    </insert>

    <update id="updatePlayer" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        update game_player
        set update_time = now()
        <if test="roleName != null">
            , role_name = #{roleName}
        </if>
        <if test="isComplete != null">
            , is_complete = #{isComplete}
        </if>
        <if test="groupId != null">
            , group_id = #{groupId}
        </if>
        <if test="isHost != null">
            , is_host = #{isHost}
        </if>
        <if test="isAlive != null">
            , is_alive = #{isAlive}
        </if>
        <if test="isReady != null">
            , is_ready = #{isReady}
        </if>
        <if test="isVoted != null">
            , is_voted = #{isVoted}
        </if>
        <if test="isTop != null">
            , is_top = #{isTop}
        </if>
        <if test="votedPlayerId != null">
            , voted_player_id = #{votedPlayerId}
        </if>
        <if test="isRestart != null">
            , is_restart = #{isRestart}
        </if>
        <if test="isCreator != null">
            , is_creator = #{isCreator}
        </if>
        where room_id = #{roomId} and player_id = #{playerId}
    </update>

    <update id="updatePlayersWithIsRestart" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        update game_player
        set update_time = now()
        <if test="roleName != null">
            , role_name = #{roleName}
        </if>
        <if test="groupId != null">
            , group_id = #{groupId}
        </if>
        <if test="isAlive != null">
            , is_alive = #{isAlive}
        </if>
        <if test="isReady != null">
            , is_ready = #{isReady}
        </if>
        <if test="isVoted != null">
            , is_voted = #{isVoted}
        </if>
        <if test="isTop != null">
            , is_top = #{isTop}
        </if>
        <if test="votedPlayerId != null">
            , voted_player_id = #{votedPlayerId}
        </if>
        <if test="isRestart != null">
            , is_restart = #{isRestart}
        </if>
        where room_id = #{roomId} and is_restart IS NULL
    </update>

    <update id="updatePlayers" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        update game_player
        set update_time = now() ,
        is_restart = #{isRestart}
        <if test="roleName != null">
            , role_name = #{roleName}
        </if>
        <if test="groupId != null">
            , group_id = #{groupId}
        </if>
        <if test="isAlive != null">
            , is_alive = #{isAlive}
        </if>
        <if test="isReady != null">
            , is_ready = #{isReady}
        </if>
        <if test="isVoted != null">
            , is_voted = #{isVoted}
        </if>
        <if test="isTop != null">
            , is_top = #{isTop}
        </if>
        <if test="votedPlayerId != null">
            , voted_player_id = #{votedPlayerId}
        </if>
        where room_id = #{roomId}
    </update>

    <select id="queryGamePlayer" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer" resultMap="dataMap">
        SELECT *
        FROM game_player
        where room_id = #{roomId} and player_id = #{playerId}
    </select>

    <select id="queryGamePlayers"  parameterType="java.lang.String" resultMap="dataMap">
        SELECT *
        FROM game_player
        where room_id = #{roomId}
    </select>

    <delete id="deletePlayer" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        DELETE
        FROM game_player
        where room_id = #{roomId} and player_id = #{playerId}
    </delete>

    <delete id="deletePlayerWithIsRestart" parameterType="ink.squidkill.infrastructure.persistent.po.GamePlayer">
        DELETE
        FROM game_player
        where room_id = #{roomId}  and is_restart IS NULL
    </delete>


    <delete id="deleteRoomPlayers" parameterType="java.lang.String">
        DELETE
        FROM game_player
        where room_id = #{roomId}
    </delete>

</mapper>
